version: '3.8'

services:
  # PostgreSQLデータベース
  postgres:
    image: docker.io/postgres:15-alpine
    container_name: postgres_db
    environment:
      POSTGRES_DB: myapp_db
      POSTGRES_USER: myapp_user
      POSTGRES_PASSWORD: myapp_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    networks:
      - app-network

  # Node.js + Expressアプリケーション
  app:
    image: docker.io/node:18-alpine
    container_name: node_app
    working_dir: /app
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: myapp_db
      DB_USER: myapp_user
      DB_PASSWORD: myapp_password
    ports:
      - "3000:3000"
    volumes:
      - ./app:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - app-network

  # pgAdmin（PostgreSQL管理ツール、オプション）
  pgadmin:
    image: docker.io/dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres_data:
  pgadmin_data:

networks:
  app-network:
    driver: bridge
